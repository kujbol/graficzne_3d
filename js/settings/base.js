// Generated by CoffeeScript 1.10.0
(function() {
  var change_settings;

  change_settings = function(event) {
    var setting;
    if (event.data !== null) {
      setting = event.data;
      setting.update_settings();
      setting.object.apply_settings();
      return window.scene.draw_scene();
    }
  };

  window.BaseSettings = (function() {
    function BaseSettings(object) {
      this.object = object;
      this.settings = [];
      this.panel = $('#settings_panel');
    }

    BaseSettings.prototype.load_settings = function() {
      var i, len, ref, results, setting;
      this.clean_settings();
      ref = this.settings;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        setting = ref[i];
        results.push(setting.load_settings());
      }
      return results;
    };

    BaseSettings.prototype.clean_settings = function() {
      return this.panel.empty();
    };

    return BaseSettings;

  })();

  window.EditBoxSettings = (function() {
    function EditBoxSettings(object, panel, name, text) {
      this.object = object;
      this.panel = panel;
      this.name = name;
      this.text = text;
    }

    EditBoxSettings.prototype.load_settings = function() {
      this.panel.append("<li><p><label for='" + this.name + "'>" + this.name + ": <input type='text' value=" + this.text + " id='" + this.name + "'/></label></p></li>");
      this.edit = $("\#" + this.name);
      return this.edit.change(this, change_settings);
    };

    EditBoxSettings.prototype.update_settings = function() {
      return this.text = parseFloat(this.edit.value);
    };

    return EditBoxSettings;

  })();

  window.CheckBoxSettings = (function() {
    function CheckBoxSettings(object, panel, name, value) {
      this.object = object;
      this.panel = panel;
      this.name = name;
      this.value = value;
    }

    CheckBoxSettings.prototype.load_settings = function() {
      var checked;
      if (this.value === true) {
        checked = 'checked="checked"';
      } else {
        checked = '';
      }
      this.panel.append("<li><p><label for='" + this.name + "'>" + this.name + ": <input type='checkbox' id='" + this.name + "' " + checked + "/></label></p></li>");
      this.edit = $("\#" + this.name);
      return this.edit.change(this, change_settings);
    };

    CheckBoxSettings.prototype.update_settings = function() {
      if (this.edit.is(":checked")) {
        return this.value = true;
      } else {
        return this.valie = false;
      }
    };

    return CheckBoxSettings;

  })();

  window.ThreeBoxSettings = (function() {
    function ThreeBoxSettings(object, panel, name, x, y, z) {
      this.object = object;
      this.panel = panel;
      this.name = name;
      this.x = x;
      this.y = y;
      this.z = z;
    }

    ThreeBoxSettings.prototype.load_settings = function() {
      this.panel.append("<li><p><b>" + this.name + "</b><ul><li><label for='" + this.name + "x'>" + this.name + " x: <input type='text' value='" + this.x + "' id='" + this.name + "x'/></label></li><li><label for='" + this.name + "y'>" + this.name + " y: <input type='text' value='" + this.y + "' id='" + this.name + "y'/></label></li><li><label for='" + this.name + "z'>" + this.name + " z: <input type='text' value='" + this.z + "' id='" + this.name + "z'/></label></li></ul></p></li>");
      this.editx = $("\#" + this.name + "x");
      this.editx.change(this, change_settings);
      this.edity = $("\#" + this.name + "y");
      this.edity.change(this, change_settings);
      this.editz = $("\#" + this.name + "z");
      return this.editz.change(this, change_settings);
    };

    ThreeBoxSettings.prototype.update_settings = function() {
      this.x = parseFloat(this.editx.val());
      this.y = parseFloat(this.edity.val());
      return this.z = parseFloat(this.editz.val());
    };

    return ThreeBoxSettings;

  })();

}).call(this);

//# sourceMappingURL=base.js.map
