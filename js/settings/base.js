// Generated by CoffeeScript 1.10.0
(function() {
  var BaseBoxSettings, active_settings, change_settings,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  active_settings = null;

  change_settings = function() {
    var i, len, ref, results, setting;
    if (active_settings !== null) {
      ref = active_settings.settings;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        setting = ref[i];
        results.push(setting.update_settings());
      }
      return results;
    }
  };

  window.BaseSettings = (function() {
    function BaseSettings() {
      this.colorful = new CheckBoxSettings('colorful', false);
      this.filled = new CheckBoxSettings('filed', true);
      this.position = new ThreeBoxSettings('position', 0, 0, 0);
      this.scale = new EditBoxSettings('scale', 1);
      this.rotate = new ThreeBoxSettings('rotate', 0, 0, 0);
      this.settings = [this.colorful, this.filled, this.position, this.scale, this.rotate];
      this.panel = $('#settings_panel');
    }

    BaseSettings.prototype.set_active = function() {
      return active_settings = this;
    };

    BaseSettings.prototype.load_settings = function() {
      var i, len, ref, results, setting;
      this.clean_settings();
      this.set_active();
      ref = this.settings;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        setting = ref[i];
        results.push(setting.load_settings());
      }
      return results;
    };

    BaseSettings.prototype.clean_settings = function() {
      active_settings = null;
      return this.panel.empty();
    };

    return BaseSettings;

  })();

  BaseBoxSettings = (function() {
    function BaseBoxSettings() {
      this.panel = $('#settings_panel');
    }

    return BaseBoxSettings;

  })();

  window.EditBoxSettings = (function(superClass) {
    extend(EditBoxSettings, superClass);

    function EditBoxSettings(name, text) {
      this.name = name;
      this.text = text;
      EditBoxSettings.__super__.constructor.call(this);
    }

    EditBoxSettings.prototype.load_settings = function() {
      this.panel.append("<p><label for='" + this.name + "'>" + this.name + ": <input type='text' value=" + this.text + " id='" + this.name + "'/></label></p>");
      this.edit = document.getElementById(this.name);
      return this.edit.onchange = change_settings;
    };

    EditBoxSettings.prototype.update_settings = function() {
      return this.text = this.edit.value;
    };

    return EditBoxSettings;

  })(BaseBoxSettings);

  window.CheckBoxSettings = (function(superClass) {
    extend(CheckBoxSettings, superClass);

    function CheckBoxSettings(name, value) {
      this.name = name;
      this.value = value;
      CheckBoxSettings.__super__.constructor.call(this);
    }

    CheckBoxSettings.prototype.load_settings = function() {
      var checked;
      if (this.value === true) {
        checked = 'checked="checked"';
      } else {
        checked = '';
      }
      this.panel.append("<p><label for='" + this.name + "'>" + this.name + ": <input type='checkbox' id='" + this.name + "' " + checked + "/></label></p>");
      this.edit = document.getElementById(this.name);
      return this.edit.onchange = change_settings;
    };

    CheckBoxSettings.prototype.update_settings = function() {
      return this.value = this.edit.checked;
    };

    return CheckBoxSettings;

  })(BaseBoxSettings);

  window.ThreeBoxSettings = (function(superClass) {
    extend(ThreeBoxSettings, superClass);

    function ThreeBoxSettings(name, x, y, z) {
      this.name = name;
      this.x = x;
      this.y = y;
      this.z = z;
      ThreeBoxSettings.__super__.constructor.call(this);
    }

    ThreeBoxSettings.prototype.load_settings = function() {
      this.panel.append("<p><b>" + this.name + "</b><ul><li><label for='" + this.name + "x'>" + this.name + " x: <input type='text' value='" + this.x + "' id='" + this.name + "x'/></label></li><li><label for='" + this.name + "y'>" + this.name + " y: <input type='text' value='" + this.y + "' id='" + this.name + "y'/></label></li><li><label for='" + this.name + "z'>" + this.name + " z: <input type='text' value='" + this.z + "' id='" + this.name + "z'/></label></li></ul></p>");
      this.editx = document.getElementById(this.name + "x");
      this.editx.onchange = change_settings;
      this.edity = document.getElementById(this.name + "y");
      this.edity.onchange = change_settings;
      this.editz = document.getElementById(this.name + "z");
      return this.editz.onchange = change_settings;
    };

    ThreeBoxSettings.prototype.update_settings = function() {
      this.x = this.editx.value;
      this.y = this.edity.value;
      return this.z = this.editz.value;
    };

    return ThreeBoxSettings;

  })(BaseBoxSettings);

}).call(this);

//# sourceMappingURL=base.js.map
